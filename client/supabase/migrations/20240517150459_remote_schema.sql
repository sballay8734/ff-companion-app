create table "public"."challenges" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."challenges" enable row level security;

create table "public"."custom_challenges" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "expiration" date,
    "proposerId" uuid not null,
    "challengedId" uuid not null,
    "acceptorId" uuid,
    "challengedResponse" text,
    "isBroadcasted" boolean not null default false,
    "description" text not null,
    "wagerAmount" integer not null,
    "odds" integer not null,
    "proposerPayout" integer not null,
    "acceptorPayout" integer not null,
    "status" text not null,
    "acceptedAt" date,
    "settledAt" date,
    "imageUrl" text,
    "videoUrl" text,
    "winner" uuid,
    "outcome" text,
    "voided" boolean not null default false,
    "voidReason" text
);


alter table "public"."custom_challenges" enable row level security;

create table "public"."leagues" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "activeMemeberIds" text[],
    "commissionerIds" text[],
    "customModuleIds" text[]
);


alter table "public"."leagues" enable row level security;

create table "public"."matchups" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "homeOwnerId" uuid not null,
    "awayOwnerId" uuid not null,
    "yearOfSeasonStart" smallint not null,
    "nflWeek" smallint not null,
    "homeScore" real not null,
    "awayScore" real not null,
    "isPlayoffMatchup" boolean not null
);


alter table "public"."matchups" enable row level security;

create table "public"."picks" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."picks" enable row level security;

create table "public"."profiles" (
    "id" uuid not null,
    "updated_at" timestamp with time zone,
    "username" text,
    "full_name" text,
    "avatar_url" text,
    "linkedLeagueIds" jsonb[]
);


alter table "public"."profiles" enable row level security;

create table "public"."proposals" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."proposals" enable row level security;

create table "public"."records" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."records" enable row level security;

CREATE UNIQUE INDEX challenges_pkey ON public.custom_challenges USING btree (id);

CREATE UNIQUE INDEX challenges_pkey1 ON public.challenges USING btree (id);

CREATE UNIQUE INDEX leagues_pkey ON public.leagues USING btree (id);

CREATE UNIQUE INDEX matchups_pkey ON public.matchups USING btree (id);

CREATE UNIQUE INDEX picks_pkey ON public.picks USING btree (id);

CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id);

CREATE UNIQUE INDEX profiles_username_key ON public.profiles USING btree (username);

CREATE UNIQUE INDEX proposals_pkey ON public.proposals USING btree (id);

CREATE UNIQUE INDEX records_pkey ON public.records USING btree (id);

alter table "public"."challenges" add constraint "challenges_pkey1" PRIMARY KEY using index "challenges_pkey1";

alter table "public"."custom_challenges" add constraint "challenges_pkey" PRIMARY KEY using index "challenges_pkey";

alter table "public"."leagues" add constraint "leagues_pkey" PRIMARY KEY using index "leagues_pkey";

alter table "public"."matchups" add constraint "matchups_pkey" PRIMARY KEY using index "matchups_pkey";

alter table "public"."picks" add constraint "picks_pkey" PRIMARY KEY using index "picks_pkey";

alter table "public"."profiles" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."proposals" add constraint "proposals_pkey" PRIMARY KEY using index "proposals_pkey";

alter table "public"."records" add constraint "records_pkey" PRIMARY KEY using index "records_pkey";

alter table "public"."custom_challenges" add constraint "challenges_acceptorId_fkey" FOREIGN KEY ("acceptorId") REFERENCES profiles(id) not valid;

alter table "public"."custom_challenges" validate constraint "challenges_acceptorId_fkey";

alter table "public"."custom_challenges" add constraint "challenges_challengedId_fkey" FOREIGN KEY ("challengedId") REFERENCES profiles(id) not valid;

alter table "public"."custom_challenges" validate constraint "challenges_challengedId_fkey";

alter table "public"."custom_challenges" add constraint "challenges_proposerId_fkey" FOREIGN KEY ("proposerId") REFERENCES profiles(id) not valid;

alter table "public"."custom_challenges" validate constraint "challenges_proposerId_fkey";

alter table "public"."custom_challenges" add constraint "challenges_winner_fkey" FOREIGN KEY (winner) REFERENCES profiles(id) not valid;

alter table "public"."custom_challenges" validate constraint "challenges_winner_fkey";

alter table "public"."matchups" add constraint "matchups_awayOwnerId_fkey" FOREIGN KEY ("awayOwnerId") REFERENCES profiles(id) not valid;

alter table "public"."matchups" validate constraint "matchups_awayOwnerId_fkey";

alter table "public"."matchups" add constraint "matchups_homeOwnerId_fkey" FOREIGN KEY ("homeOwnerId") REFERENCES profiles(id) not valid;

alter table "public"."matchups" validate constraint "matchups_homeOwnerId_fkey";

alter table "public"."profiles" add constraint "profiles_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."profiles" validate constraint "profiles_id_fkey";

alter table "public"."profiles" add constraint "profiles_username_key" UNIQUE using index "profiles_username_key";

alter table "public"."profiles" add constraint "username_length" CHECK ((char_length(username) >= 3)) not valid;

alter table "public"."profiles" validate constraint "username_length";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
begin
  insert into public.profiles (id, full_name, avatar_url)
  values (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');
  return new;
end;
$function$
;

grant delete on table "public"."challenges" to "anon";

grant insert on table "public"."challenges" to "anon";

grant references on table "public"."challenges" to "anon";

grant select on table "public"."challenges" to "anon";

grant trigger on table "public"."challenges" to "anon";

grant truncate on table "public"."challenges" to "anon";

grant update on table "public"."challenges" to "anon";

grant delete on table "public"."challenges" to "authenticated";

grant insert on table "public"."challenges" to "authenticated";

grant references on table "public"."challenges" to "authenticated";

grant select on table "public"."challenges" to "authenticated";

grant trigger on table "public"."challenges" to "authenticated";

grant truncate on table "public"."challenges" to "authenticated";

grant update on table "public"."challenges" to "authenticated";

grant delete on table "public"."challenges" to "service_role";

grant insert on table "public"."challenges" to "service_role";

grant references on table "public"."challenges" to "service_role";

grant select on table "public"."challenges" to "service_role";

grant trigger on table "public"."challenges" to "service_role";

grant truncate on table "public"."challenges" to "service_role";

grant update on table "public"."challenges" to "service_role";

grant delete on table "public"."custom_challenges" to "anon";

grant insert on table "public"."custom_challenges" to "anon";

grant references on table "public"."custom_challenges" to "anon";

grant select on table "public"."custom_challenges" to "anon";

grant trigger on table "public"."custom_challenges" to "anon";

grant truncate on table "public"."custom_challenges" to "anon";

grant update on table "public"."custom_challenges" to "anon";

grant delete on table "public"."custom_challenges" to "authenticated";

grant insert on table "public"."custom_challenges" to "authenticated";

grant references on table "public"."custom_challenges" to "authenticated";

grant select on table "public"."custom_challenges" to "authenticated";

grant trigger on table "public"."custom_challenges" to "authenticated";

grant truncate on table "public"."custom_challenges" to "authenticated";

grant update on table "public"."custom_challenges" to "authenticated";

grant delete on table "public"."custom_challenges" to "service_role";

grant insert on table "public"."custom_challenges" to "service_role";

grant references on table "public"."custom_challenges" to "service_role";

grant select on table "public"."custom_challenges" to "service_role";

grant trigger on table "public"."custom_challenges" to "service_role";

grant truncate on table "public"."custom_challenges" to "service_role";

grant update on table "public"."custom_challenges" to "service_role";

grant delete on table "public"."leagues" to "anon";

grant insert on table "public"."leagues" to "anon";

grant references on table "public"."leagues" to "anon";

grant select on table "public"."leagues" to "anon";

grant trigger on table "public"."leagues" to "anon";

grant truncate on table "public"."leagues" to "anon";

grant update on table "public"."leagues" to "anon";

grant delete on table "public"."leagues" to "authenticated";

grant insert on table "public"."leagues" to "authenticated";

grant references on table "public"."leagues" to "authenticated";

grant select on table "public"."leagues" to "authenticated";

grant trigger on table "public"."leagues" to "authenticated";

grant truncate on table "public"."leagues" to "authenticated";

grant update on table "public"."leagues" to "authenticated";

grant delete on table "public"."leagues" to "service_role";

grant insert on table "public"."leagues" to "service_role";

grant references on table "public"."leagues" to "service_role";

grant select on table "public"."leagues" to "service_role";

grant trigger on table "public"."leagues" to "service_role";

grant truncate on table "public"."leagues" to "service_role";

grant update on table "public"."leagues" to "service_role";

grant delete on table "public"."matchups" to "anon";

grant insert on table "public"."matchups" to "anon";

grant references on table "public"."matchups" to "anon";

grant select on table "public"."matchups" to "anon";

grant trigger on table "public"."matchups" to "anon";

grant truncate on table "public"."matchups" to "anon";

grant update on table "public"."matchups" to "anon";

grant delete on table "public"."matchups" to "authenticated";

grant insert on table "public"."matchups" to "authenticated";

grant references on table "public"."matchups" to "authenticated";

grant select on table "public"."matchups" to "authenticated";

grant trigger on table "public"."matchups" to "authenticated";

grant truncate on table "public"."matchups" to "authenticated";

grant update on table "public"."matchups" to "authenticated";

grant delete on table "public"."matchups" to "service_role";

grant insert on table "public"."matchups" to "service_role";

grant references on table "public"."matchups" to "service_role";

grant select on table "public"."matchups" to "service_role";

grant trigger on table "public"."matchups" to "service_role";

grant truncate on table "public"."matchups" to "service_role";

grant update on table "public"."matchups" to "service_role";

grant delete on table "public"."picks" to "anon";

grant insert on table "public"."picks" to "anon";

grant references on table "public"."picks" to "anon";

grant select on table "public"."picks" to "anon";

grant trigger on table "public"."picks" to "anon";

grant truncate on table "public"."picks" to "anon";

grant update on table "public"."picks" to "anon";

grant delete on table "public"."picks" to "authenticated";

grant insert on table "public"."picks" to "authenticated";

grant references on table "public"."picks" to "authenticated";

grant select on table "public"."picks" to "authenticated";

grant trigger on table "public"."picks" to "authenticated";

grant truncate on table "public"."picks" to "authenticated";

grant update on table "public"."picks" to "authenticated";

grant delete on table "public"."picks" to "service_role";

grant insert on table "public"."picks" to "service_role";

grant references on table "public"."picks" to "service_role";

grant select on table "public"."picks" to "service_role";

grant trigger on table "public"."picks" to "service_role";

grant truncate on table "public"."picks" to "service_role";

grant update on table "public"."picks" to "service_role";

grant delete on table "public"."profiles" to "anon";

grant insert on table "public"."profiles" to "anon";

grant references on table "public"."profiles" to "anon";

grant select on table "public"."profiles" to "anon";

grant trigger on table "public"."profiles" to "anon";

grant truncate on table "public"."profiles" to "anon";

grant update on table "public"."profiles" to "anon";

grant delete on table "public"."profiles" to "authenticated";

grant insert on table "public"."profiles" to "authenticated";

grant references on table "public"."profiles" to "authenticated";

grant select on table "public"."profiles" to "authenticated";

grant trigger on table "public"."profiles" to "authenticated";

grant truncate on table "public"."profiles" to "authenticated";

grant update on table "public"."profiles" to "authenticated";

grant delete on table "public"."profiles" to "service_role";

grant insert on table "public"."profiles" to "service_role";

grant references on table "public"."profiles" to "service_role";

grant select on table "public"."profiles" to "service_role";

grant trigger on table "public"."profiles" to "service_role";

grant truncate on table "public"."profiles" to "service_role";

grant update on table "public"."profiles" to "service_role";

grant delete on table "public"."proposals" to "anon";

grant insert on table "public"."proposals" to "anon";

grant references on table "public"."proposals" to "anon";

grant select on table "public"."proposals" to "anon";

grant trigger on table "public"."proposals" to "anon";

grant truncate on table "public"."proposals" to "anon";

grant update on table "public"."proposals" to "anon";

grant delete on table "public"."proposals" to "authenticated";

grant insert on table "public"."proposals" to "authenticated";

grant references on table "public"."proposals" to "authenticated";

grant select on table "public"."proposals" to "authenticated";

grant trigger on table "public"."proposals" to "authenticated";

grant truncate on table "public"."proposals" to "authenticated";

grant update on table "public"."proposals" to "authenticated";

grant delete on table "public"."proposals" to "service_role";

grant insert on table "public"."proposals" to "service_role";

grant references on table "public"."proposals" to "service_role";

grant select on table "public"."proposals" to "service_role";

grant trigger on table "public"."proposals" to "service_role";

grant truncate on table "public"."proposals" to "service_role";

grant update on table "public"."proposals" to "service_role";

grant delete on table "public"."records" to "anon";

grant insert on table "public"."records" to "anon";

grant references on table "public"."records" to "anon";

grant select on table "public"."records" to "anon";

grant trigger on table "public"."records" to "anon";

grant truncate on table "public"."records" to "anon";

grant update on table "public"."records" to "anon";

grant delete on table "public"."records" to "authenticated";

grant insert on table "public"."records" to "authenticated";

grant references on table "public"."records" to "authenticated";

grant select on table "public"."records" to "authenticated";

grant trigger on table "public"."records" to "authenticated";

grant truncate on table "public"."records" to "authenticated";

grant update on table "public"."records" to "authenticated";

grant delete on table "public"."records" to "service_role";

grant insert on table "public"."records" to "service_role";

grant references on table "public"."records" to "service_role";

grant select on table "public"."records" to "service_role";

grant trigger on table "public"."records" to "service_role";

grant truncate on table "public"."records" to "service_role";

grant update on table "public"."records" to "service_role";

create policy "Public profiles are viewable by everyone."
on "public"."profiles"
as permissive
for select
to public
using (true);


create policy "Users can insert their own profile."
on "public"."profiles"
as permissive
for insert
to public
with check ((( SELECT auth.uid() AS uid) = id));


create policy "Users can update own profile."
on "public"."profiles"
as permissive
for update
to public
using ((( SELECT auth.uid() AS uid) = id));



